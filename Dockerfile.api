# Web API Container
# Lightweight Node.js för Express server

FROM node:20-alpine

# Installera Docker CLI för att kunna köra docker exec
RUN apk add --no-cache docker-cli

# Sätt arbetskatalog för root dependencies
WORKDIR /

# Kopiera root package.json för globala dependencies (mysql2, dotenv, etc)
COPY package*.json ./
RUN npm ci --only=production

# Kopiera database module
COPY database ./database

# Sätt arbetskatalog för app
WORKDIR /app

# Kopiera web package files
COPY web/package*.json ./

# Installera web-specific dependencies
RUN npm ci --only=production

# Kopiera application kod
COPY web ./

# Skapa user för säkerhet
# OBS: Kör som root för att tillåta Docker socket-åtkomst vid manual trigger
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app && \
    chown -R nodejs:nodejs /database && \
    chown -R nodejs:nodejs /node_modules

# Kommenterar ut USER nodejs för Docker socket-åtkomst
# USER nodejs

# ⚠️ PORT 3000 är FASTSTÄLLD - ändra inte!
ENV PORT=3000
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000/health', (r) => r.statusCode === 200 ? process.exit(0) : process.exit(1))"

# Start server
CMD ["node", "server.js"]
